什么是上下文切换
    要执行多于CPU核心数量的线程，通过分配时间片的方法。
    这个过程就是上下文切换。需要保存CPU寄存器和程序计数器，储存到内核中。

三种上下文切换
    进程上下文切换
    线程上下文切换
    中断上下文切换


导致上下文切换的原因总结如下：
    多个任务抢占sychronized同步锁资源
    线程中存在I/O阻塞，CPU调度器会切换CPU时间片
    在线程中通过主动阻塞当前线程的方法释放CPU时间片
    当前线程执行完成以后释放CPU时间片，CPu重新调度


进程上下文切换：
    CPU时间片分配
    进程系统资源（内存）不足，进程被挂起
    存在优先级更高的进程运行时候，当前进程有可能被挂起，CPU时间片分配给优先级更高的进程运行
    *消耗资源很大：虚拟内存、桟、全局变量等保存起来。还要保存：内核空间的内核堆栈、寄存器状态（进程的切换只能发生在内核态）
    *这些所有操作都要在CPU执行

线程上下文切换：
    线程是轻量级进程
    一个进程可以创建多个线程，这些线程可以共享同一进程的资源。
    *两个线程切换属于不同的进程时，由于进程资源不共享，所以实际上是进程的切换。
    *两个线程属于同一个进程时，只需要保存线程的上下文。（线程的私有数据、寄存器等数据）

中断上下文切换：
    CPU对系统发生的某个中断事件做出反应导致的切换
        CPU故障、程序故障
        I/O中断
        *这个中断只需要保存内核态中必须的状态保存，CPU寄存器、内核堆栈等。但是仍然会消耗CPU资源


减少上下文切换：
    减少线程数量
    无锁的设计解决线程竞争问题
    采用CAS做自旋操作（无锁化编程思想）





